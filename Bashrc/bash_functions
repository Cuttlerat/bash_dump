#!/usr/bin/env bash
# ~/.bash_functions


function cd {
    command cd "$@" && ls
}

function up() {

    n=""
    for i in $(seq $1); do
        n="$n../"
    done
    command cd $n && ls
}


function gcp {
    # [g]it [c]ommit [p]ush
    cdg >/dev/null
    git add . && git commit -m "${1:-"Fast commit by Cuttlerat"}" && git push
    cd - >/dev/null
}

function gbc {
    # [g]it [b]ranch [c]heckout
    git branch $1
    git checkout $1
    git push --set-upstream origin $1
}

function git_branch {
  git rev-parse --abbrev-ref HEAD 2>&- | sed 's/.\+/[&]/g'
}

function timer_start {
  timer=${timer:-$SECONDS}
}

function timer_stop {
  timer_show=$(($SECONDS - $timer))
  unset timer
}

function org {
    ORGPATH="$HOME/.org"
    if [[ $# -eq 0 ]]; then
        DAY=$(date +'%d')
        MONTH=$(date +'%m')
        YEAR=$(date +'%Y')
    elif [[ $# -eq 1 ]]; then
        INPUT="$@"
        DAY=$(awk -F'.' '$0=$1' <<< "${INPUT}" )
        MONTH=$(awk -F'.' '$0=$2' <<< "${INPUT}")
        YEAR=$(awk -F'.' '$0=$3' <<< "${INPUT}")
        [[ ${YEAR:="$(date +%Y)"} ]]
        [[ $(printf "${YEAR}" | wc -m) -eq 2 ]] && YEAR="20${YEAR}"
    else
        echo "Usage: 'org' or 'org DD.MM' or 'org DD.MM.YY'"
        return
    fi
    mkdir -p "${ORGPATH}/${YEAR}/${MONTH}"
    ORGFILE="${ORGPATH}/${YEAR}/${MONTH}/${DAY}.org"
    [[ ! -f "${ORGFILE}" ]] && cat >"${ORGFILE}" <<-EOF
#+AUTHOR:   Алексей Киоллер
#+EMAIL:    a.kioller@dreamkas.ru
#+LANGUAGE: ru
           
EOF
    $EDITOR "${ORGFILE}"
}

function arole {
    # $1 - Name of new role
    # $2 - Group of hosts of this roles (keep empty for all)
    
    [[ -d "./group_vars" ]] || [[ -d "./roles" ]] || return 1
    for i in "./roles/${1}/"{tasks,defaults}; do
        mkdir -p "${i}"
        if [ ! -f "${i}/main.yml" ]; then
            touch "${i}/main.yml"
            echo "---" > "${i}/main.yml"
        fi
    done
    if [ ! -f "./${1}.yml" ]; then
        if [ -e ${2} ]; then
            HOST="all"
        else
            HOST="${2}"
        fi
    cat > "./${1}.yml" <<EOF  
---
- hosts: ${HOST}
  roles:
    - ${1}
EOF
    fi
    cd "./roles/${1}/"
    ${EDITOR} "./tasks/main.yml"
}

function atask {
    # $1 - Name of role to open the main task
    ROLE="$( sed 's/\.yml$//' <<<${1})"
    FILE_PATH="./roles/${ROLE}/tasks/main.yml"
    if [ -f "${FILE_PATH}" ]; then
        ${EDITOR} "${FILE_PATH}"
    else
        echo "File ${FILE_PATH} does not exists!" && (exit 1)
    fi
}
