#!/usr/bin/env bash
# ~/.bash_prompt

function timer_now {
    date +%s%N
}

function timer_start {
    TIMER_START=${TIMER_START:-$(timer_now)}
}

function timer_stop {
    local delta_us=$((($(timer_now) - ${TIMER_START}) / 1000))
    local us=$((delta_us % 1000))
    local ms=$(((delta_us / 1000) % 1000))
    local s=$(((delta_us / 1000000) % 60))
    local m=$(((delta_us / 60000000) % 60))
    local h=$((delta_us / 3600000000))
    # Goal: always show around 3 digits of accuracy
    if ((h > 0)); then TIMER_SHOW=${h}h${m}m
    elif ((m > 0)); then TIMER_SHOW=${m}m${s}s
    elif ((s >= 10)); then TIMER_SHOW=${s}.$((ms / 100))s
    elif ((s > 0)); then TIMER_SHOW=${s}.$(printf %03d $ms)s
    elif ((ms >= 100)); then TIMER_SHOW=${ms}ms
    elif ((ms > 0)); then TIMER_SHOW=${ms}.$((us / 100))ms
    else TIMER_SHOW=${us}us
    fi
    unset TIMER_START
}


set_prompt () {

    local Last_Command=$? # Must come first!

    timer_stop

    local Blue='\[\e[01;34m\]'
    local White='\[\e[01;37m\]'
    local Red='\[\e[00;31m\]'
    local Light_Red='\[\e[01;31m\]'
    local Green='\[\e[01;32m\]'
    local Reset='\[\e[00m\]'

    if [[ $Last_Command == 0 ]]; then
        PS1="$Green"
    else
        PS1="$Red"
    fi

    
    PS1+="[\$?]" # Exit code of last command

    PS1+="$Light_Red[$TIMER_SHOW]" # Last command execution time

    PS1+="$Red[$USER]" # Current user
    PS1+="$Green\$(git_branch)" # Git branch (if you are in a git directory)
    PS1+="$Light_Red\\w: $Reset" # ':'
}

#exec 9>&2
#exec 8> >(
#    while IFS='' read -r line || [[ "$line" ]]; do
#       echo -e "$(tput setaf 3)${line}$(tput sgr 0)"
#    done
#)

#undirect(){ exec 2>&9; }
#redirect(){ exec 2>&8; }


trap_handler() {
    timer_start
    #redirect
}

prompt_command() {
    set_prompt
    #undirect
}


trap 'trap_handler' DEBUG
PROMPT_COMMAND='prompt_command'
